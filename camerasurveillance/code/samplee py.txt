import os
import cv2
from PIL import Image
import datetime
# Checking the current directory path
from src.dbconnection import iud
print(os.getcwd())
# Folder which contains all the images
# from which video is to be generated
os.chdir(r"C:\Users\ANJU\Desktop\Customer interest surveillance\src\static\sample")
path = r"C:\Users\ANJU\Desktop\Customer interest surveillance\src\static\sample"
# Video Generating function

def generate_video():
    num_of_images = len(os.listdir('.'))
    # print(num_of_images)
    mean_height = 0
    mean_width = 0
    for file in os.listdir('.'):
        if file.endswith(".jpg") or file.endswith(".jpeg") or file.endswith("png"):
            im = Image.open(os.path.join(path, file))
            width, height = im.size
            mean_width += width
            mean_height += height

    mean_width = int(mean_width / num_of_images)
    mean_height = int(mean_height / num_of_images)

    # print(mean_height)
    # print(mean_width)

    # Resizing of the images to give
    # them same width and height
    for file in os.listdir('.'):
        if file.endswith(".jpg") or file.endswith(".jpeg") or file.endswith("png"):
            # opening image using PIL Image
            im = Image.open(os.path.join(path, file))

            # im.size includes the height and width of image
            width, height = im.size
            print(width, height)

            # resizing
            imResize = im.resize((mean_width, mean_height), Image.ANTIALIAS)
            imResize.save(file, 'JPEG', quality=95)  # setting quality
            # printing each resized image name
            print(im.filename.split('\\')[-1], " is resized")

    image_folder = '.'  # make sure to use your folder
    fn=datetime.datetime.now().strftime("%Y%m%d%H%M%S")+".avi"
    video_name = fn #'mygeneratedvideo.avi'
    # os.chdir("static")

    images = [img for img in os.listdir(image_folder)
              if img.endswith(".jpg") or
              img.endswith(".jpeg") or
              img.endswith("png")]

    # Array images should only consider
    # the image files ignoring others if any
    print(images,"imagesssssssssssssssss")

    frame = cv2.imread(os.path.join(image_folder, images[0]))

    # setting the frame width, height width
    # the width, height of first image
    height, width, layers = frame.shape

    video = cv2.VideoWriter(video_name, 0, 1, (width, height))

    # Appending the images to the video one by one
    for image in images:
        video.write(cv2.imread(os.path.join(image_folder, image)))

    # Deallocating memories taken for window creation



    cv2.destroyAllWindows()
    video.release()
    # releasing the video generated

    # os.system('ffmpeg -i C:\\Users\\HP\\Downloads\\Anomaly Detection in Surveillance videos\\src\\static\\sample\\' + video_name + ' C:\\Users\\HP\\Downloads\\Anomaly Detection in Surveillance videos\\src\\static\\sample\\' + video_name + ".mp4")

    qry="insert into video values(null,1,%s,now(),'pending')"
    val=(video_name)
    iud(qry,val)
    folder_path = (r'C:\Users\ANJU\Desktop\Customer interest surveillance\src\static\sample')

    # using listdir() method to list the files of the folder
    test = os.listdir(folder_path)

    # taking a loop to remove all the images
    # using ".png" extension to remove only png images
    # using os.remove() method to remove the files

    for images in test:
        if images.endswith(".jpg"):
            os.remove(os.path.join(folder_path, images))

# Calling the generate_video function
# generate_video()